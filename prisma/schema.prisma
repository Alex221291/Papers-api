// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id    String     @default(uuid()) @id
  name  String? @unique
  papers Paper[]
}

model Paper {
  id    String     @default(uuid()) @id
  name     String?
  description   String? @db.VarChar(2000)
  applicationSphere String? @db.VarChar(1000)
  picture Bytes?
  category    Category?    @relation(fields: [categoryId], references: [id])
  categoryId  String? @default(uuid())
  footnote String? @db.VarChar(1000)
  cargos Cargo[]
}

model Cargo {
  id    String     @default(uuid()) @id
  title     String? @db.VarChar(1000)
  weight     Int?
  shortDescription     String? @db.VarChar(500)
  articleNumber     String?
  packageQuantity     Int?
  description     String? @db.VarChar(2000)
  price     Float?
  width     Float?
  density     Float?
  winding     Float?
  packagingType     String?
  paper    Paper?    @relation(fields: [paperId], references: [id])
  paperId  String? @default(uuid())
  pictures Picture[]
}

model Picture {
  id    String     @default(uuid()) @id
  order     Int?
  picture Bytes?
  cargo    Cargo?    @relation(fields: [cargoId], references: [id])
  cargoId  String? @default(uuid())
  type    String?
  news News[]
}

model News {
  id    String     @default(uuid()) @id
  title     String?
  description   String? @db.VarChar(3000)
  date DateTime @default(now()) @db.Date
  picture    Picture?    @relation(fields: [pictureId], references: [id])
  pictureId  String? @default(uuid())
}